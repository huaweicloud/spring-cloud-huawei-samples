spring:
  application:
    name: canary-consumer
  cloud:
#    discovery: #第三方调用配置参考 用户可在8087端口启动第三方服务
#      client:
#        simple:
#          order: -100
#          instances:
#            thirdService:
#              - host: 127.0.0.1
#                port: 8087
#                instanceId: thirdService01
    servicecomb:
      discovery:
        appName: canary_demo
        # 应用名称，本示例固定值（可替换成自己想要的名字），因为只有应用名称相同的微服务才能够相互发现，不能轻易变化。
        serviceName: ${spring.application.name}
        # 注册中心地址，本示例使用ServiceStage环境变量。建议保留这种配置方式，部署的时候，不用手工修改地址。
        address: ${PAAS_CSE_SC_ENDPOINT:http://127.0.0.1:30100}
        # 微服务版本号，本示例使用ServiceStage环境变量。建议保留这种配置方式，部署的时候，不用手工修改版本号，防止契约注册失败。
        version: ${CAS_INSTANCE_VERSION:0.0.1}
        config:
          serverAddr: ${PAAS_CSE_CC_ENDPOINT:http://127.0.0.1:30110}
          serverType: kie
#servicecomb:
#  matchGroup:
#    allOperation: |
#      matches:
#        - apiPath:
#            prefix: "/"
#          serviceName: thirdService
#  instanceBulkhead:
#    ## 隔离仓限制正在处理的请求数为5个，新来的请求等待1000毫秒没有获取到
#    ## 许可，将被拒绝。
#    allOperation: |
#      maxConcurrentCalls: 5
#      maxWaitDuration: 1000
#  routeRule:
#    canary-provider: |
#      - precedence: 1 #优先级
#        route: #路由规则
#          - weight: 80
#            tags:
#              version: 0.0.1
#          - weight: 20
#            tags:
#              version: 0.0.2